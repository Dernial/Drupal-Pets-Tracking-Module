<?php

/**
* Implementation of hook_menu().
*/
function pets_cats_menu() {
  return array(
    'cats' => array(
      'title' => 'Cats',
      'page callback' => 'pets_cats_select',
      'access callback' => TRUE, // Just let anyone see it.
      'type' => MENU_NORMAL_ITEM, // Menu entry with a navigation entry.
    ),
    'cats/add' => array(
      'title' => 'Add',
      'page callback' => 'pets_cats_add',
      'page arguments' => array(1),
      'access callback' => 'user_access',
      'type' => MENU_CALLBACK, // No navigation entry, just handle the request.
      'access arguments' => array('administer pets_cats'),
    ),   
    'cats/%' => array(
      'title' => 'Cats',
      'page callback' => 'pets_cats_about',
      'page arguments' => array(1),
      'access callback' => TRUE, // Just let anyone see it.
      'type' => MENU_CALLBACK, // No navigation entry, just handle the request.
    ),
    'cats/%/delete' => array(
      'title' => 'Delete',
      'page callback' => 'pets_cats_delete',
      'page arguments' => array(1),
      'access callback' => 'user_access',
      'type' => MENU_CALLBACK, // No navigation entry, just handle the request.
      'access arguments' => array('administer pets_cats'),
    ),
    'cats/%/description' => array(
      'title' => 'About',
      'page callback' => 'pets_cats_about',
      'page arguments' => array(1),
      'access callback' => TRUE, // Just let anyone see it.
      'type' => MENU_DEFAULT_LOCAL_TASK, // Default tab entry. This will show up when you visit the parent cats.
    ),
    'cats/%/maintnence' => array(
      'title' => 'Maintnence',
      'page callback' => 'pets_cats_maint',
      'page arguments' => array(1),
      'access callback' => TRUE, // Just let anyone see it.
      'type' => MENU_LOCAL_TASK, // Tab entry
    ),
    'cats/%/pics' => array(
      'title' => 'Pictures',
      'page callback' => 'pets_cats_pics',
      'page arguments' => array(1),
      'access callback' => TRUE, // Just let anyone see it.
      'type' => MENU_LOCAL_TASK, // Tab entry
    ),
    'cats/%/costs' => array(
      'title' => 'Costs',
      'page callback' => 'pets_cats_costs',
      'page arguments' => array(1),
      'access callback' => TRUE, // Just let anyone see it.
      'type' => MENU_LOCAL_TASK, // Tab entry
    ), 
  );
}

/**
* Valid permissions for this module
* @return array An array of valid permissions for the onthisdate module
*/
function pets_cats_perm() {
  return array('access pets_cats content', 'administer pets_cats');
}

/**
* Theme Stuffz
* @return array An array of theme stuffz
*/
function pets_cats_theme() {
	return array(
		'about' => array(
		'template' => 'pets_cats_about',
		'arguments' => array('catinfo' => NULL),
		),
		'cat_link' => array(
		'template' => 'pets_cats_cat_link',
		'arguments' => array('catinfo' => NULL),
		),
	);
}

function pets_cats_select() {
	$returnValue = "Please select a cat.<br />";
	
	$result = module_invoke("pets_core", "get_animal", "cat");
	
	if($result) {
		foreach ($result as $node) {
			$returnValue .= theme("cat_link", $node);
		}
	}

	// Show an Add link if there's permissions to.

	if(user_access('administer pets_cats'))
	{
		// Need to add in theme formatting here
		$returnValue .=  "<br />";
		$returnValue .=  "<br />";
		$returnValue .= l("Add Cat", 'cats/add');
	}

	return $returnValue;
}

/**
* Menu callback for cats/%/about
*/
function pets_cats_about($cat_id) {
	$output = '';

	$result = module_invoke("pets_core", "get_animal", "cat", $cat_id);
	
	if ($result[0]) {
		$output .= theme("about", $result[0]);

		// Things to add:
		// Last update
		
	}
	else {
		drupal_set_message(t('That cat doesn\'t exist.'));
	}
	
	return $output;
}

function pets_cats_maint($cat_id) {
  return "These are the maintnence items for $cat_id";
}

function pets_cats_pics($cat_id) {
  return "Here are some pictures of $cat_id";
}

function pets_cats_costs($cat_id) {
  return "These have been the costs associated with $cat_id";
}

function pets_cats_add($cat_id) {
    $page_content = '';
   
    $page_content .= drupal_get_form('pets_cats_add_form');
	
	return $page_content;
}

function pets_cats_delete($cat_id) {
    // Really need a confirmation here
	
	$output = '';
	
	$result = module_invoke("pets_core", "delete_animal", "cat", $cat_id);
				
	if($result) drupal_set_message(t('Your cat has been deleted.'));
	else drupal_set_message(t('There was an error deleting the cat.'));

	return $output;
}

function pets_cats_add_form_submit($form, &$form_state) {
	$animalData = $form_state['values'];
	$animalData['born'] = mktime(0, 0, 0, $form_state['values']['born']['month'], $form_state['values']['born']['day'], $form_state['values']['born']['year']);
	$animalData['aquired'] = mktime(0, 0, 0, $form_state['values']['aquired']['month'], $form_state['values']['aquired']['day'], $form_state['values']['aquired']['year']);
	
	$result = module_invoke("pets_core", "add_animal", "cat", $animalData);
				
	if($result) drupal_set_message(t('Your cat has been saved.'));
	else drupal_set_message(t('There was an error adding the cat.'));
	
	$form_state['redirect'] = 'cats';
}

function pets_cats_add_form($form_state) {
    $form['name'] = array(
        '#type' => 'textfield',
        '#title' => t('Name'),
        '#description' => t("The cat's Name."),
        '#required' => TRUE,
    );
    $form['breed'] = array(
        '#type' => 'textfield',
        '#title' => t('Breed'),
        '#description' => t("The cat's breed."),
    );
    $form['sex'] = array(
        '#type' => 'select',
        '#title' => t('Sex'),
        '#description' => t("The cat's sex."),
		'#options' => array(
			'male' => t('Male'),
			'female' => t('Female'),
		),
	);
	$form['born'] = array(
        '#type' => 'date',
        '#title' => t('Birthdate'),
        '#description' => t("The cat's Birthdate."),
    );
    $form['aquired'] = array(
        '#type' => 'date',
        '#title' => t('Aquired'),
        '#description' => t("The date the cat was aquired."),
    );
    $form['aquiredfrom'] = array(
        '#type' => 'textfield',
        '#title' => t('Aquired From'),
        '#description' => t("Where you got the cat."),
    );
	$form['cost'] = array(
        '#type' => 'textfield',
        '#title' => t('Cost'),
        '#description' => t("What the cost was to purchase or adopt."),
    );
	$form['description'] = array(
        '#type' => 'textarea',
        '#title' => t('Description'),
        '#cols' => 50,
        '#rows' => 5,
        '#description' => t("Description of the cat."),
    );
    //Submit button:
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('New Cat'),
    );
   
    return $form;
}